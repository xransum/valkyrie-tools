[[package]]
name = "alabaster"
version = "0.7.13"
description = "A configurable sidebar-enabled Sphinx theme"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "appdirs"
version = "1.4.4"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "argcomplete"
version = "3.2.1"
description = "Bash tab completion for argparse"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
test = ["coverage", "pexpect", "wheel", "ruff", "mypy"]

[[package]]
name = "art"
version = "6.1"
description = "ASCII Art Library For Python"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["coverage (>=4.1)", "vulture (>=1.0)", "bandit (>=1.5.1)", "pydocstyle (>=3.0.0)"]

[[package]]
name = "attrs"
version = "23.1.0"
description = "Classes Without Boilerplate"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
cov = ["attrs", "coverage[toml] (>=5.3)"]
dev = ["attrs", "pre-commit"]
docs = ["furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier", "zope-interface"]
tests = ["attrs", "zope-interface"]
tests-no-zope = ["cloudpickle", "hypothesis", "mypy (>=1.1.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]

[[package]]
name = "babel"
version = "2.14.0"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytz = {version = ">=2015.7", markers = "python_version < \"3.9\""}

[package.extras]
dev = ["pytest (>=6.0)", "pytest-cov", "freezegun (>=1.0,<2.0)"]

[[package]]
name = "bandit"
version = "1.7.6"
description = "Security oriented static analyser for python code."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
colorama = {version = ">=0.3.9", markers = "platform_system == \"Windows\""}
GitPython = ">=3.1.30"
PyYAML = ">=5.3.1"
rich = "*"
stevedore = ">=1.20.0"

[package.extras]
test = ["coverage (>=4.5.4)", "fixtures (>=3.0.0)", "flake8 (>=4.0.0)", "stestr (>=2.5.0)", "testscenarios (>=0.5.0)", "testtools (>=2.3.0)", "beautifulsoup4 (>=4.8.0)", "pylint (==1.9.4)", "tomli (>=1.1.0)"]
toml = ["tomli (>=1.1.0)"]
yaml = ["pyyaml"]

[[package]]
name = "beautifulsoup4"
version = "4.12.2"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "black"
version = "23.12.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
packaging = ">=22.0"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typing-extensions = {version = ">=4.0.1", markers = "python_version < \"3.11\""}

[package.extras]
colorama = ["colorama (>=0.4.3)"]
d = ["aiohttp (>=3.7.4,!=3.9.0)", "aiohttp (>=3.7.4)"]
jupyter = ["ipython (>=7.8.0)", "tokenize-rt (>=3.2.0)"]
uvloop = ["uvloop (>=0.15.2)"]

[[package]]
name = "build"
version = "1.0.3"
description = "A simple, correct Python build frontend"
category = "dev"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
colorama = {version = "*", markers = "os_name == \"nt\""}
importlib-metadata = {version = ">=4.6", markers = "python_version < \"3.10\""}
packaging = ">=19.0"
pyproject_hooks = "*"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}

[package.extras]
docs = ["furo (>=2023.08.17)", "sphinx (>=7.0,<8.0)", "sphinx-argparse-cli (>=1.5)", "sphinx-autodoc-typehints (>=1.10)", "sphinx-issues (>=3.0.0)"]
test = ["filelock (>=3)", "pytest (>=6.2.4)", "pytest-cov (>=2.12)", "pytest-mock (>=2)", "pytest-rerunfailures (>=9.1)", "pytest-xdist (>=1.34)", "wheel (>=0.36.0)", "setuptools (>=42.0.0)", "setuptools (>=56.0.0)", "setuptools (>=56.0.0)", "setuptools (>=67.8.0)"]
typing = ["importlib-metadata (>=5.1)", "mypy (>=1.5.0,<1.6.0)", "tomli", "typing-extensions (>=3.7.4.3)"]
virtualenv = ["virtualenv (>=20.0.35)"]

[[package]]
name = "cachecontrol"
version = "0.13.1"
description = "httplib2 caching for requests"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
filelock = {version = ">=3.8.0", optional = true, markers = "extra == \"filecache\""}
msgpack = ">=0.5.2"
requests = ">=2.16.0"

[package.extras]
dev = ["cachecontrol", "build", "mypy", "tox", "pytest-cov", "pytest", "cherrypy", "sphinx", "black", "types-redis", "types-requests"]
filecache = ["filelock (>=3.8.0)"]
redis = ["redis (>=2.10.5)"]

[[package]]
name = "certifi"
version = "2023.11.17"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.16.0"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.4.0"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "charset-normalizer"
version = "3.3.2"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "classify-imports"
version = "4.2.0"
description = "Utilities for refactoring imports in python-like syntax."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "cleo"
version = "2.1.0"
description = "Cleo allows you to create beautiful and testable command-line interfaces."
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
crashtest = ">=0.4.1,<0.5.0"
rapidfuzz = ">=3.0.0,<4.0.0"

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "colorlog"
version = "6.8.0"
description = "Add colours to the output of Python's logging module."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
development = ["black", "flake8", "mypy", "pytest", "types-colorama"]

[[package]]
name = "coverage"
version = "7.3.3"
description = "Code coverage measurement for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
tomli = {version = "*", optional = true, markers = "python_full_version <= \"3.11.0a6\" and extra == \"toml\""}

[package.extras]
toml = ["tomli"]

[[package]]
name = "crashtest"
version = "0.4.1"
description = "Manage Python errors with ease"
category = "dev"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "cryptography"
version = "41.0.7"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=5.3.0)", "sphinx-rtd-theme (>=1.1.1)"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
nox = ["nox"]
pep8test = ["black", "ruff", "mypy", "check-sdist"]
sdist = ["build"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-xdist", "pretend"]
test-randomorder = ["pytest-randomly"]

[[package]]
name = "darglint"
version = "1.8.1"
description = "A utility for ensuring Google-style docstrings stay up to date with the source code."
category = "dev"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "distlib"
version = "0.3.8"
description = "Distribution utilities"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "dnspython"
version = "2.0.0"
description = "DNS toolkit"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
dnssec = ["cryptography (>=2.6)"]
doh = ["requests", "requests-toolbelt"]
idna = ["idna (>=2.1)"]
curio = ["curio (>=1.2)", "sniffio (>=1.1)"]
trio = ["trio (>=0.14.0)", "sniffio (>=1.1)"]

[[package]]
name = "docutils"
version = "0.18.1"
description = "Docutils -- Python Documentation Utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "dparse"
version = "0.6.3"
description = "A parser for Python dependency files"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
packaging = "*"
tomli = {version = "*", markers = "python_version < \"3.11\""}

[package.extras]
conda = ["pyyaml"]
pipenv = ["pipenv (<=2022.12.19)"]

[[package]]
name = "dulwich"
version = "0.21.7"
description = "Python Git Library"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
urllib3 = ">=1.25"

[package.extras]
fastimport = ["fastimport"]
https = ["urllib3 (>=1.24.1)"]
paramiko = ["paramiko"]
pgp = ["gpg"]

[[package]]
name = "exceptiongroup"
version = "1.2.0"
description = "Backport of PEP 654 (exception groups)"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "fastjsonschema"
version = "2.19.0"
description = "Fastest Python implementation of JSON schema"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
devel = ["colorama", "jsonschema", "json-spec", "pylint", "pytest", "pytest-benchmark", "pytest-cache", "validictory"]

[[package]]
name = "filelock"
version = "3.13.1"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo (>=2023.9.10)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.2.6)"]
testing = ["covdefaults (>=2.3)", "coverage (>=7.3.2)", "diff-cover (>=8)", "pytest-cov (>=4.1)", "pytest-mock (>=3.12)", "pytest-timeout (>=2.2)", "pytest (>=7.4.3)"]
typing = ["typing-extensions (>=4.8)"]

[[package]]
name = "flake8"
version = "5.0.4"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
mccabe = ">=0.7.0,<0.8.0"
pycodestyle = ">=2.9.0,<2.10.0"
pyflakes = ">=2.5.0,<2.6.0"

[[package]]
name = "flake8-bandit"
version = "4.1.1"
description = "Automated security testing with bandit and flake8."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
bandit = ">=1.7.3"
flake8 = ">=5.0.0"

[[package]]
name = "flake8-bugbear"
version = "23.3.12"
description = "A plugin for flake8 finding likely bugs and design problems in your program. Contains warnings that don't belong in pyflakes and pycodestyle."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=19.2.0"
flake8 = ">=3.0.0"

[package.extras]
dev = ["tox", "coverage", "hypothesis", "hypothesmith (>=0.2)", "pre-commit", "pytest"]

[[package]]
name = "flake8-docstrings"
version = "1.7.0"
description = "Extension for flake8 which uses pydocstyle to check docstrings"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
flake8 = ">=3"
pydocstyle = ">=2.1"

[[package]]
name = "flake8-rst-docstrings"
version = "0.3.0"
description = "Python docstring reStructuredText (RST) validator for flake8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
flake8 = ">=3"
pygments = "*"
restructuredtext-lint = "*"

[package.extras]
develop = ["build", "twine"]

[[package]]
name = "furo"
version = "2023.9.10"
description = "A clean customisable Sphinx documentation theme."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
beautifulsoup4 = "*"
pygments = ">=2.7"
sphinx = ">=6.0,<8.0"
sphinx-basic-ng = "*"

[[package]]
name = "future"
version = "0.18.3"
description = "Clean single-source support for Python 3 and 2"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "gitdb"
version = "4.0.11"
description = "Git Object Database"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.40"
description = "GitPython is a Python library used to interact with Git repositories"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[package.extras]
test = ["black", "coverage", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest", "pytest-cov", "pytest-instafail", "pytest-subtests", "pytest-sugar", "mock"]

[[package]]
name = "identify"
version = "2.5.33"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "3.6"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagesize"
version = "1.4.1"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "importlib-metadata"
version = "7.0.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "importlib-resources"
version = "6.1.1"
description = "Read resources from Python packages"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "zipp (>=3.17)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "iniconfig"
version = "2.0.0"
description = "brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "installer"
version = "0.7.0"
description = "A library for installing Python wheels."
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "ipwhois"
version = "1.2.0"
description = "Retrieve and parse whois data for IPv4 and IPv6 addresses."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
dnspython = "<=2.0.0"

[[package]]
name = "isort"
version = "5.13.2"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.8.0"

[package.extras]
colors = ["colorama (>=0.4.6)"]

[[package]]
name = "jaraco.classes"
version = "3.3.0"
description = "Utility functions for Python class constructs"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
more-itertools = "*"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "jeepney"
version = "0.8.0"
description = "Low-level, pure Python DBus protocol wrapper."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "pytest-trio", "pytest-asyncio (>=0.17)", "testpath", "trio", "async-timeout"]
trio = ["trio", "async-generator"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "keyring"
version = "24.3.0"
description = "Store and access your passwords safely."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = ">=4.11.4", markers = "python_version < \"3.12\""}
importlib-resources = {version = "*", markers = "python_version < \"3.9\""}
"jaraco.classes" = "*"
jeepney = {version = ">=0.4.2", markers = "sys_platform == \"linux\""}
pywin32-ctypes = {version = ">=0.2.0", markers = "sys_platform == \"win32\""}
SecretStorage = {version = ">=3.2", markers = "sys_platform == \"linux\""}

[package.extras]
completion = ["shtab (>=1.1.0)"]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[[package]]
name = "livereload"
version = "2.6.3"
description = "Python LiveReload is an awesome tool for web developers"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"
tornado = {version = "*", markers = "python_version > \"2.7\""}

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code_style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme", "jupyter-sphinx"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "markupsafe"
version = "2.1.3"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mccabe"
version = "0.7.0"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "mdit-py-plugins"
version = "0.4.0"
description = "Collection of plugins for markdown-it-py"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
markdown-it-py = ">=1.0.0,<4.0.0"

[package.extras]
code_style = ["pre-commit"]
rtd = ["myst-parser", "sphinx-book-theme"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "more-itertools"
version = "10.1.0"
description = "More routines for operating on iterables, beyond itertools"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "msgpack"
version = "1.0.7"
description = "MessagePack serializer"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "mypy"
version = "1.7.1"
description = "Optional static typing for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mypy-extensions = ">=1.0.0"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}
typing-extensions = ">=4.1.0"

[package.extras]
dmypy = ["psutil (>=4.0)"]
install-types = ["pip"]
mypyc = ["setuptools (>=50)"]
reports = ["lxml"]

[[package]]
name = "mypy-extensions"
version = "1.0.0"
description = "Type system extensions for programs checked with the mypy type checker."
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "myst-parser"
version = "2.0.0"
description = "An extended [CommonMark](https://spec.commonmark.org/) compliant parser,"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
docutils = ">=0.16,<0.21"
jinja2 = "*"
markdown-it-py = ">=3.0,<4.0"
mdit-py-plugins = ">=0.4,<1.0"
pyyaml = "*"
sphinx = ">=6,<8"

[package.extras]
code_style = ["pre-commit (>=3.0,<4.0)"]
linkify = ["linkify-it-py (>=2.0,<3.0)"]
rtd = ["ipython", "sphinx-book-theme (==1.0.0rc2)", "pydata-sphinx-theme (==v0.13.0rc4)", "sphinx-design2", "sphinx-copybutton", "sphinxext-rediraffe (>=0.2.7,<0.3.0)", "sphinxext-opengraph (>=0.8.2,<0.9.0)", "sphinx-pyscript", "sphinx-tippy (>=0.3.1)", "sphinx-autodoc2 (>=0.4.2,<0.5.0)", "sphinx-togglebutton"]
testing = ["beautifulsoup4", "coverage", "pytest (>=7,<8)", "pytest-cov", "pytest-regressions", "pytest-param-files (>=0.3.4,<0.4.0)", "sphinx-pytest"]
testing-docutils = ["pygments", "pytest (>=7,<8)", "pytest-param-files (>=0.3.4,<0.4.0)"]

[[package]]
name = "nodeenv"
version = "1.8.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[[package]]
name = "nox"
version = "2023.4.22"
description = "Flexible test automation."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argcomplete = ">=1.9.4,<4.0"
colorlog = ">=2.6.1,<7.0.0"
packaging = ">=20.9"
virtualenv = ">=14"

[package.extras]
tox_to_nox = ["jinja2", "tox (<4)"]

[[package]]
name = "nox-poetry"
version = "1.0.3"
description = "nox-poetry"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
nox = ">=2020.8.22"
packaging = ">=20.9"
tomlkit = ">=0.7"

[[package]]
name = "packaging"
version = "23.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pbr"
version = "6.0.0"
description = "Python Build Reasonableness"
category = "dev"
optional = false
python-versions = ">=2.6"

[[package]]
name = "pep8-naming"
version = "0.13.3"
description = "Check PEP-8 naming conventions, plugin for flake8"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
flake8 = ">=5.0.0"

[[package]]
name = "pexpect"
version = "4.9.0"
description = "Pexpect allows easy control of interactive console applications."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pkginfo"
version = "1.9.6"
description = "Query metadata from sdists / bdists / installed packages."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest", "pytest-cov"]

[[package]]
name = "platformdirs"
version = "3.11.0"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx-autodoc-typehints (>=1.24)", "sphinx (>=7.1.1)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=4.1)", "pytest-mock (>=3.11.1)", "pytest (>=7.4)"]

[[package]]
name = "pluggy"
version = "1.3.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "poetry"
version = "1.7.1"
description = "Python dependency management and packaging made easy."
category = "dev"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
build = ">=1.0.3,<2.0.0"
cachecontrol = {version = ">=0.13.0,<0.14.0", extras = ["filecache"]}
cleo = ">=2.1.0,<3.0.0"
crashtest = ">=0.4.1,<0.5.0"
dulwich = ">=0.21.2,<0.22.0"
fastjsonschema = ">=2.18.0,<3.0.0"
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}
installer = ">=0.7.0,<0.8.0"
keyring = ">=24.0.0,<25.0.0"
packaging = ">=20.5"
pexpect = ">=4.7.0,<5.0.0"
pkginfo = ">=1.9.4,<2.0.0"
platformdirs = ">=3.0.0,<4.0.0"
poetry-core = "1.8.1"
poetry-plugin-export = ">=1.6.0,<2.0.0"
pyproject-hooks = ">=1.0.0,<2.0.0"
requests = ">=2.26,<3.0"
requests-toolbelt = ">=0.9.1,<2"
shellingham = ">=1.5,<2.0"
tomli = {version = ">=2.0.1,<3.0.0", markers = "python_version < \"3.11\""}
tomlkit = ">=0.11.4,<1.0.0"
trove-classifiers = ">=2022.5.19"
virtualenv = ">=20.23.0,<21.0.0"
xattr = {version = ">=0.10.0,<0.11.0", markers = "sys_platform == \"darwin\""}

[[package]]
name = "poetry-core"
version = "1.8.1"
description = "Poetry PEP 517 Build Backend"
category = "dev"
optional = false
python-versions = ">=3.8,<4.0"

[[package]]
name = "poetry-plugin-export"
version = "1.6.0"
description = "Poetry plugin to export the dependencies to various formats"
category = "dev"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
poetry = ">=1.6.0,<2.0.0"
poetry-core = ">=1.7.0,<2.0.0"

[[package]]
name = "pre-commit"
version = "3.5.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
virtualenv = ">=20.10.0"

[[package]]
name = "pre-commit-hooks"
version = "4.5.0"
description = "Some out-of-the-box hooks for pre-commit."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
"ruamel.yaml" = ">=0.15"
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pycodestyle"
version = "2.9.1"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydocstyle"
version = "6.3.0"
description = "Python docstring style checker"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
snowballstemmer = ">=2.2.0"

[package.extras]
toml = ["tomli (>=1.2.3)"]

[[package]]
name = "pyflakes"
version = "2.5.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pygments"
version = "2.17.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
plugins = ["importlib-metadata"]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pyproject-hooks"
version = "1.0.0"
description = "Wrappers to call pyproject.toml-based build backend hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
tomli = {version = ">=1.1.0", markers = "python_version < \"3.11\""}

[[package]]
name = "pytest"
version = "7.4.3"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
exceptiongroup = {version = ">=1.0.0rc8", markers = "python_version < \"3.11\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
tomli = {version = ">=1.0.0", markers = "python_version < \"3.11\""}

[package.extras]
testing = ["argcomplete", "attrs (>=19.2.0)", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-datadir"
version = "1.5.0"
description = "pytest plugin for test data directories and files"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pytest = ">=5.0"

[[package]]
name = "python-whois"
version = "0.8.0"
description = "Whois querying and parsing of domain registration information."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
future = "*"

[package.extras]
"better date conversion" = ["python-dateutil"]

[[package]]
name = "pytz"
version = "2023.3.post1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyupgrade"
version = "3.8.0"
description = "A tool to automatically upgrade syntax for newer versions."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
tokenize-rt = ">=3.2.0"

[[package]]
name = "pywin32-ctypes"
version = "0.2.2"
description = "A (partial) reimplementation of pywin32 using ctypes/cffi"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyyaml"
version = "6.0.1"
description = "YAML parser and emitter for Python"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "rapidfuzz"
version = "3.5.2"
description = "rapid fuzzy string matching"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
full = ["numpy"]

[[package]]
name = "reorder-python-imports"
version = "3.12.0"
description = "Tool for reordering python imports"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
classify-imports = ">=4.1"

[[package]]
name = "requests"
version = "2.31.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-toolbelt"
version = "1.0.0"
description = "A utility belt for advanced users of python-requests"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "restructuredtext-lint"
version = "1.4.0"
description = "reStructuredText linter"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
docutils = ">=0.11,<1.0"

[[package]]
name = "rich"
version = "13.7.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "dev"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"
typing-extensions = {version = ">=4.0.0,<5.0", markers = "python_version < \"3.9\""}

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "ruamel.yaml"
version = "0.18.5"
description = "ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
"ruamel.yaml.clib" = {version = ">=0.2.7", markers = "platform_python_implementation == \"CPython\" and python_version < \"3.13\""}

[package.extras]
docs = ["ryd", "mercurial (>5.7)"]
jinja2 = ["ruamel.yaml.jinja2 (>=0.2)"]

[[package]]
name = "ruamel.yaml.clib"
version = "0.2.8"
description = "C version of reader, parser and emitter for ruamel.yaml derived from libyaml"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "safety"
version = "2.3.4"
description = "Checks installed dependencies for known vulnerabilities and licenses."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
Click = ">=8.0.2"
dparse = ">=0.6.2"
packaging = ">=21.0"
requests = "*"
"ruamel.yaml" = ">=0.17.21"

[package.extras]
github = ["pygithub (>=1.43.3)", "jinja2 (>=3.1.0)"]
gitlab = ["python-gitlab (>=1.3.0)"]

[[package]]
name = "secretstorage"
version = "3.3.3"
description = "Python bindings to FreeDesktop.org Secret Service API"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = ">=2.0"
jeepney = ">=0.6"

[[package]]
name = "shellingham"
version = "1.5.4"
description = "Tool to Detect Surrounding Shell"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smmap"
version = "5.0.1"
description = "A pure Python implementation of a sliding window memory map manager"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "snowballstemmer"
version = "2.2.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "soupsieve"
version = "2.5"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "sphinx"
version = "7.1.2"
description = "Python documentation generator"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
alabaster = ">=0.7,<0.8"
babel = ">=2.9"
colorama = {version = ">=0.4.5", markers = "sys_platform == \"win32\""}
docutils = ">=0.18.1,<0.21"
imagesize = ">=1.3"
importlib-metadata = {version = ">=4.8", markers = "python_version < \"3.10\""}
Jinja2 = ">=3.0"
packaging = ">=21.0"
Pygments = ">=2.13"
requests = ">=2.25.0"
snowballstemmer = ">=2.0"
sphinxcontrib-applehelp = "*"
sphinxcontrib-devhelp = "*"
sphinxcontrib-htmlhelp = ">=2.0.0"
sphinxcontrib-jsmath = "*"
sphinxcontrib-qthelp = "*"
sphinxcontrib-serializinghtml = ">=1.1.5"

[package.extras]
docs = ["sphinxcontrib-websupport"]
lint = ["flake8 (>=3.5.0)", "flake8-simplify", "isort", "ruff", "mypy (>=0.990)", "sphinx-lint", "docutils-stubs", "types-requests"]
test = ["pytest (>=4.6)", "html5lib", "cython", "filelock"]

[[package]]
name = "sphinx-autobuild"
version = "2021.3.14"
description = "Rebuild Sphinx documentation on changes, with live-reload in the browser."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = "*"
livereload = "*"
sphinx = "*"

[package.extras]
test = ["pytest", "pytest-cov"]

[[package]]
name = "sphinx-basic-ng"
version = "1.0.0b2"
description = "A modern skeleton for Sphinx themes."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
sphinx = ">=4.0"

[package.extras]
docs = ["furo", "myst-parser", "sphinx-copybutton", "sphinx-inline-tabs", "ipython"]

[[package]]
name = "sphinx-click"
version = "5.1.0"
description = "Sphinx extension that automatically documents click applications"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=7.0"
docutils = "*"
sphinx = ">=2.0"

[[package]]
name = "sphinx-rtd-theme"
version = "1.3.0"
description = "Read the Docs theme for Sphinx"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
docutils = "<0.19"
sphinx = ">=1.6,<8"
sphinxcontrib-jquery = ">=4,<5"

[package.extras]
dev = ["transifex-client", "sphinxcontrib-httpdomain", "bump2version", "wheel"]

[[package]]
name = "sphinxcontrib-applehelp"
version = "1.0.4"
description = "sphinxcontrib-applehelp is a Sphinx extension which outputs Apple help books"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sphinxcontrib-devhelp"
version = "1.0.2"
description = "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp document."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sphinxcontrib-htmlhelp"
version = "2.0.1"
description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest", "html5lib"]

[[package]]
name = "sphinxcontrib-jquery"
version = "4.1"
description = "Extension to include jQuery on newer Sphinx releases"
category = "main"
optional = false
python-versions = ">=2.7"

[package.dependencies]
Sphinx = ">=1.8"

[[package]]
name = "sphinxcontrib-jsmath"
version = "1.0.1"
description = "A sphinx extension which renders display math in HTML via JavaScript"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest", "flake8", "mypy"]

[[package]]
name = "sphinxcontrib-qthelp"
version = "1.0.3"
description = "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp document."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "sphinxcontrib-serializinghtml"
version = "1.1.5"
description = "sphinxcontrib-serializinghtml is a sphinx extension which outputs \"serialized\" HTML files (json and pickle)."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
name = "stevedore"
version = "5.1.0"
description = "Manage dynamic plugins for Python applications"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pbr = ">=2.0.0,<2.1.0 || >2.1.0"

[[package]]
name = "tokenize-rt"
version = "5.2.0"
description = "A wrapper around the stdlib `tokenize` which roundtrips."
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tomlkit"
version = "0.12.3"
description = "Style preserving TOML library"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tornado"
version = "6.4"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "dev"
optional = false
python-versions = ">= 3.8"

[[package]]
name = "trove-classifiers"
version = "2023.11.29"
description = "Canonical source for classifiers on PyPI (pypi.org)."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "typeguard"
version = "4.1.5"
description = "Run-time type checker for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
importlib-metadata = {version = ">=3.6", markers = "python_version < \"3.10\""}
typing-extensions = {version = ">=4.7.0", markers = "python_version < \"3.12\""}

[package.extras]
doc = ["packaging", "Sphinx (>=7)", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["coverage[toml] (>=7)", "pytest (>=7)", "mypy (>=1.2.0)"]

[[package]]
name = "types-beautifulsoup4"
version = "4.12.0.7"
description = "Typing stubs for beautifulsoup4"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
types-html5lib = "*"

[[package]]
name = "types-html5lib"
version = "1.1.11.15"
description = "Typing stubs for html5lib"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "types-requests"
version = "2.31.0.10"
description = "Typing stubs for requests"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
urllib3 = ">=2"

[[package]]
name = "typing-extensions"
version = "4.9.0"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "urllib3"
version = "2.1.0"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "validators"
version = "0.22.0"
description = "Python Data Validation for Humans™"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs-offline = ["myst-parser (>=2.0.0)", "pypandoc-binary (>=1.11)", "sphinx (>=7.1.1)"]
docs-online = ["mkdocs (>=1.5.2)", "mkdocs-git-revision-date-localized-plugin (>=1.2.0)", "mkdocs-material (>=9.2.6)", "mkdocstrings[python] (>=0.22.0)", "pyaml (>=23.7.0)"]
hooks = ["pre-commit (>=3.3.3)"]
package = ["build (>=1.0.0)", "twine (>=4.0.2)"]
runner = ["tox (>=4.11.1)"]
sast = ["bandit[toml] (>=1.7.5)"]
testing = ["pytest (>=7.4.0)"]
tooling = ["black (>=23.7.0)", "ruff (>=0.0.287)", "pyright (>=1.1.325)"]
tooling-extras = ["pyaml (>=23.7.0)", "pypandoc-binary (>=1.11)", "pytest (>=7.4.0)"]

[[package]]
name = "virtualenv"
version = "20.25.0"
description = "Virtual Python Environment builder"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
distlib = ">=0.3.7,<1"
filelock = ">=3.12.2,<4"
platformdirs = ">=3.9.1,<5"

[package.extras]
docs = ["furo (>=2023.7.26)", "proselint (>=0.13)", "sphinx-argparse (>=0.4)", "sphinx (>=7.1.2)", "sphinxcontrib-towncrier (>=0.2.1a0)", "towncrier (>=23.6)"]
test = ["covdefaults (>=2.3)", "coverage-enable-subprocess (>=1)", "coverage (>=7.2.7)", "flaky (>=3.7)", "packaging (>=23.1)", "pytest-env (>=0.8.2)", "pytest-freezer (>=0.4.8)", "pytest-mock (>=3.11.1)", "pytest-randomly (>=3.12)", "pytest-timeout (>=2.1)", "pytest (>=7.4)", "setuptools (>=68)", "time-machine (>=2.10)"]

[[package]]
name = "xattr"
version = "0.10.1"
description = "Python wrapper for extended filesystem attributes"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
cffi = ">=1.0"

[[package]]
name = "xdoctest"
version = "1.1.2"
description = "A rewrite of the builtin doctest module"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", optional = true, markers = "platform_system == \"Windows\" and extra == \"colors\""}
Pygments = {version = "*", optional = true, markers = "python_version >= \"3.5.0\" and extra == \"colors\""}

[package.extras]
all = ["pyflakes (>=2.2.0)", "colorama (>=0.4.1)", "debugpy (>=1.3.0)", "pytest (>=4.6.0)", "tomli (>=0.2.0)", "ipykernel (>=6.0.0)", "Pygments (>=2.0.0)", "jupyter-client (>=6.1.5)", "IPython (>=7.10.0)", "debugpy (>=1.0.0)", "ipykernel (>=5.2.0)", "pytest (>=4.6.0)", "nbconvert (>=6.0.0)", "debugpy (>=1.0.0)", "debugpy (>=1.0.0)", "ipykernel (>=6.11.0)", "typing (>=3.7.4)", "debugpy (>=1.6.0)", "pytest (>=6.2.5)", "Pygments (>=2.4.1)", "attrs (>=19.2.0)", "jedi (>=0.16)", "jupyter-core (>=4.7.0)", "ipython-genutils (>=0.2.0)", "jinja2 (>=3.0.0)", "pytest-cov (>=3.0.0)", "jupyter-client (>=7.0.0)", "IPython (>=7.23.1)", "nbconvert (>=6.1.0)"]
all-strict = ["pyflakes (==2.2.0)", "colorama (==0.4.1)", "debugpy (==1.3.0)", "pytest (==4.6.0)", "tomli (==0.2.0)", "ipykernel (==6.0.0)", "Pygments (==2.0.0)", "jupyter-client (==6.1.5)", "IPython (==7.10.0)", "debugpy (==1.0.0)", "ipykernel (==5.2.0)", "pytest (==4.6.0)", "nbconvert (==6.0.0)", "debugpy (==1.0.0)", "debugpy (==1.0.0)", "ipykernel (==6.11.0)", "typing (==3.7.4)", "debugpy (==1.6.0)", "pytest (==6.2.5)", "Pygments (==2.4.1)", "attrs (==19.2.0)", "jedi (==0.16)", "jupyter-core (==4.7.0)", "ipython-genutils (==0.2.0)", "jinja2 (==3.0.0)", "pytest-cov (==3.0.0)", "jupyter-client (==7.0.0)", "IPython (==7.23.1)", "nbconvert (==6.1.0)"]
colors = ["colorama", "pygments", "pygments"]
jupyter = ["debugpy", "ipykernel", "jupyter-client", "ipython", "debugpy", "ipykernel", "nbconvert", "debugpy", "debugpy", "ipykernel", "debugpy", "attrs", "jedi", "jupyter-core", "ipython-genutils", "jinja2", "jupyter-client", "ipython", "nbconvert"]
optional = ["pyflakes (>=2.2.0)", "colorama (>=0.4.1)", "debugpy (>=1.3.0)", "tomli (>=0.2.0)", "ipykernel (>=6.0.0)", "Pygments (>=2.0.0)", "jupyter-client (>=6.1.5)", "IPython (>=7.10.0)", "debugpy (>=1.0.0)", "ipykernel (>=5.2.0)", "nbconvert (>=6.0.0)", "debugpy (>=1.0.0)", "debugpy (>=1.0.0)", "ipykernel (>=6.11.0)", "debugpy (>=1.6.0)", "Pygments (>=2.4.1)", "attrs (>=19.2.0)", "jedi (>=0.16)", "jupyter-core (>=4.7.0)", "ipython-genutils (>=0.2.0)", "jinja2 (>=3.0.0)", "jupyter-client (>=7.0.0)", "IPython (>=7.23.1)", "nbconvert (>=6.1.0)"]
optional-strict = ["pyflakes (==2.2.0)", "colorama (==0.4.1)", "debugpy (==1.3.0)", "tomli (==0.2.0)", "ipykernel (==6.0.0)", "Pygments (==2.0.0)", "jupyter-client (==6.1.5)", "IPython (==7.10.0)", "debugpy (==1.0.0)", "ipykernel (==5.2.0)", "nbconvert (==6.0.0)", "debugpy (==1.0.0)", "debugpy (==1.0.0)", "ipykernel (==6.11.0)", "debugpy (==1.6.0)", "Pygments (==2.4.1)", "attrs (==19.2.0)", "jedi (==0.16)", "jupyter-core (==4.7.0)", "ipython-genutils (==0.2.0)", "jinja2 (==3.0.0)", "jupyter-client (==7.0.0)", "IPython (==7.23.1)", "nbconvert (==6.1.0)"]
tests-binary-strict = ["cmake (==3.21.2)", "ninja (==1.10.2)", "pybind11 (==2.7.1)", "scikit-build (==0.11.1)", "cmake (==3.25.0)", "ninja (==1.11.1)", "pybind11 (==2.10.3)", "scikit-build (==0.16.1)"]
tests-binary = ["cmake", "ninja", "pybind11", "scikit-build", "cmake", "ninja", "pybind11", "scikit-build"]
tests-strict = ["pytest (==4.6.0)", "pytest (==4.6.0)", "typing (==3.7.4)", "pytest (==6.2.5)", "pytest-cov (==3.0.0)"]
tests = ["pytest (>=4.6.0)", "pytest (>=4.6.0)", "typing (>=3.7.4)", "pytest (>=6.2.5)", "pytest-cov (>=3.0.0)"]

[[package]]
name = "zipp"
version = "3.17.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8,<3.12"
content-hash = "9f7725f2a7d35c3faf718b985e5e45fdddc93462f5bf5faa0daa086bbf30e036"

[metadata.files]
alabaster = []
appdirs = []
argcomplete = []
art = []
attrs = []
babel = []
bandit = []
beautifulsoup4 = []
black = []
build = []
cachecontrol = []
certifi = []
cffi = []
cfgv = []
charset-normalizer = []
classify-imports = []
cleo = []
click = []
colorama = []
colorlog = []
coverage = []
crashtest = []
cryptography = []
darglint = []
distlib = []
dnspython = []
docutils = []
dparse = []
dulwich = []
exceptiongroup = []
fastjsonschema = []
filelock = []
flake8 = []
flake8-bandit = []
flake8-bugbear = []
flake8-docstrings = []
flake8-rst-docstrings = []
furo = []
future = []
gitdb = []
gitpython = []
identify = []
idna = []
imagesize = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
installer = []
ipwhois = []
isort = []
"jaraco.classes" = []
jeepney = []
jinja2 = []
keyring = []
livereload = []
markdown-it-py = []
markupsafe = []
mccabe = []
mdit-py-plugins = []
mdurl = []
more-itertools = []
msgpack = []
mypy = []
mypy-extensions = []
myst-parser = []
nodeenv = []
nox = []
nox-poetry = []
packaging = []
pathspec = []
pbr = []
pep8-naming = []
pexpect = []
pkginfo = []
platformdirs = []
pluggy = []
poetry = []
poetry-core = []
poetry-plugin-export = []
pre-commit = []
pre-commit-hooks = []
ptyprocess = []
pycodestyle = []
pycparser = []
pydocstyle = []
pyflakes = []
pygments = []
pyproject-hooks = []
pytest = []
pytest-datadir = []
python-whois = []
pytz = []
pyupgrade = []
pywin32-ctypes = []
pyyaml = []
rapidfuzz = []
reorder-python-imports = []
requests = []
requests-toolbelt = []
restructuredtext-lint = []
rich = []
"ruamel.yaml" = []
"ruamel.yaml.clib" = []
safety = []
secretstorage = []
shellingham = []
six = []
smmap = []
snowballstemmer = []
soupsieve = []
sphinx = []
sphinx-autobuild = []
sphinx-basic-ng = []
sphinx-click = []
sphinx-rtd-theme = []
sphinxcontrib-applehelp = []
sphinxcontrib-devhelp = []
sphinxcontrib-htmlhelp = []
sphinxcontrib-jquery = []
sphinxcontrib-jsmath = []
sphinxcontrib-qthelp = []
sphinxcontrib-serializinghtml = []
stevedore = []
tokenize-rt = []
tomli = []
tomlkit = []
tornado = []
trove-classifiers = []
typeguard = []
types-beautifulsoup4 = []
types-html5lib = []
types-requests = []
typing-extensions = []
urllib3 = []
validators = []
virtualenv = []
xattr = []
xdoctest = []
zipp = []
