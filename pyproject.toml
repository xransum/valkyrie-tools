[tool.poetry]
name = "valkyrie-tools"
version = "1.0.2"
description = "Valkyrie Tools"
authors = ["Kevin Haas <xransum@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/xransum/valkyrie-tools"
repository = "https://github.com/xransum/valkyrie-tools"
documentation = "https://valkyrie-tools.readthedocs.io"
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    #"Programming Language :: Python :: 3.12",
]

[tool.poetry.urls]
Changelog = "https://github.com/xransum/valkyrie-tools/releases"

[tool.poetry.dependencies]
# Dumb, but can't go with 3.12+ due to the drop of imp in 3.12 and
# the fact whois depends on it.
# https://docs.python.org/3.12/whatsnew/3.12.html#removed-modules
python = ">=3.8,<3.12"
nox = ">=2020.8.22"
tomlkit = ">=0.7"
packaging = ">=20.9"
click = ">=7.0"
nox-poetry = "^1.0.3"
sphinx-click = "^5.0.1"
sphinx-rtd-theme = "^1.3.0"
pexpect = "^4.8.0"
ipwhois = "^1.2.0"
python-whois = "^0.8.0"
beautifulsoup4 = "^4.12.2"
types-requests = "^2.31.0"
types-beautifulsoup4 = "^4.12.0"
art = "^6.1"
appdirs = "^1.4.4"
validators = "^0.22.0"

[tool.poetry.dev-dependencies]
pytest = ">=6.2.5"
coverage = { extras = ["toml"], version = ">=6.3" }
safety = ">=1.10.3"
mypy = ">=0.931"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
pre-commit = ">=2.17.0"
flake8 = ">=4.0.1"
black = ">=22.3"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=22.1.11"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
pep8-naming = ">=0.12.1"
# TODO: The 'python < 4' constraint is a workaround to allow poetry to
#       generate a lock file. Hopefully there's an alternative to darglint
#       before Python 4 is released.
darglint = { version = ">=1.8.1", python = "< 4" }
pre-commit-hooks = ">=4.1.0"
furo = ">=2022.1.2"
Pygments = ">=2.11.2"
# TODO: Remove the 'python' constraint once poetry drops its own constraint
poetry = { version = ">=1.1.12", python = "<4" }
pytest-datadir = ">=1.3.1"
typing-extensions = ">=4.0.1"
pyupgrade = ">=2.31.0"
isort = ">=5.10.1"
myst-parser = ">=0.16.1"
reorder-python-imports = "^3.12.0"
pexpect = "^4.8.0"

[tool.poetry.scripts]
valkyrie = "valkyrie_tools.valkyrie:cli"
urlcheck = "valkyrie_tools.urlcheck:cli"
ipcheck = "valkyrie_tools.ipcheck:cli"
whobe = "valkyrie_tools.whobe:cli"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["valkyrie_tools"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:future.*",      # imp: in favour of importlib
    "ignore::DeprecationWarning:ipwhois.net.*", # dns.resolver.Resolver.resolve: migration to
]

[tool.black]
line-length = 80

[tool.isort]
profile = "black"
lines_after_imports = 2

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
